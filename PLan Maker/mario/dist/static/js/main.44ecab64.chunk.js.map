{"version":3,"sources":["components/layout/signedInLink.js","actions/authAction.js","components/layout/signedOutLink.js","components/layout/navbar.js","components/dashboard/notifications.js","components/project/planSummary.js","components/project/planList.js","components/dashboard/dashboard.js","components/project/planDetails.js","actions/planActions.js","components/project/createPlan.js","components/auth/signin.js","components/auth/signup.js","App.js","serviceWorker.js","reducer/authReducer.js","reducer/planReducer.js","reducer/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOutFunc","getState","getFirebase","auth","signOut","then","type","props","initials","className","to","onClick","e","SignedOutBar","compose","firestoreConnect","state","firebase","usersId","firestore","ordered","users","init","profile","links","uid","isLoaded","exact","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","PLanSummary","plans","title","authFirstName","authLastName","createdAt","calendar","PLanList","element","DashBoard","this","Component","collection","limit","orderBy","ownProps","match","params","data","plan","planDeleteFunc","getFirestore","doc","delete","catch","err","planDeleter","btn","authId","history","push","CreatePlan","handleSubmit","preventDefault","target","reset","createPlan","handleChange","setState","value","onSubmit","htmlFor","onChange","required","add","firstname","lastname","Date","planCreater","SignIn","email","password","signInFunc","authErr","email_pass","ema_pass","signInWithEmailAndPassword","SignUp","confirm","signUpFunc","alert","authLite","cred","newUser","createUserWithEmailAndPassword","res","set","toUpperCase","App","path","component","Dashboard","PlanDetail","Boolean","window","location","hostname","initState","authReducer","action","message","console","log","planReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.44ecab64.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { signOutAction } from '../../actions/authAction'\r\nimport { connect }  from 'react-redux'\r\n\r\nconst SignedInBar = (props) => {\r\n    const handleLogout = (e) =>{\r\n        props.signOutFunc()\r\n    }\r\n    const {initials} = props\r\n    return (\r\n            <ul className=\" d-flex nav\">\r\n                <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link text-light\" to=\"/createPlan\">Make Plane</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <a className=\"nav-link text-light\" onClick={handleLogout}>Logout </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <a className=\"nav-link text-light bg-danger rounded-pill d-inline-block \" >\r\n                    {initials ? initials : <span className='text-danger'>A</span> }</a>\r\n                </li>\r\n            </ul> \r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        signOutFunc: ()=> {\r\n            dispatch(signOutAction())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInBar)\r\n","import { Redirect } from \"react-router-dom\"\r\n\r\nexport const signInAction = (ema_pass) =>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n                ema_pass.email,\r\n                ema_pass.password,\r\n            ).then(()=>{\r\n                dispatch({\r\n                    type: 'LOGIN_SUCCESSFUL'\r\n                        \r\n                })\r\n            }).catch(err =>{\r\n                dispatch({\r\n                    type: 'LOGIN_FAILED',\r\n                    err\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const signOutAction = () =>{\r\n    return (dispatch, getState, { getFirebase })=>{\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut()\r\n        .then(()=>{\r\n            dispatch({\r\n                type: 'LOGED_OUT_USER',\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const signUpAction = (newUser) =>{\r\n    return (dispatch, getState, { getFirebase, getFirestore })=>{\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res)=>{\r\n            return firestore.collection('users').doc(\r\n                res.user.uid\r\n            ).set({\r\n                firstname: newUser.firstname,\r\n                lastname: newUser.lastname,\r\n                initials: newUser.firstname[0].toUpperCase() + newUser.lastname[0].toUpperCase(),\r\n                firstname: newUser.firstname,\r\n            })\r\n        }).then(()=>{\r\n            dispatch({\r\n                type: 'SIGNED_UP_USER'\r\n            })\r\n        }).catch((err)=>{\r\n            dispatch({\r\n                type: 'SIGNED_UP_USER_FAIL',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nconst SignedOutBar = () => {\r\n    return (\r\n\r\n        <ul className=\" d-flex nav align-items-center\">\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link text-light\" to=\"/login\">Login</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link text-light\" to=\"/signup\">Signup</NavLink>\r\n            </li>\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default SignedOutBar\r\n","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport SignedInBar  from './signedInLink'\r\nimport SignedOutBar  from './signedOutLink'\r\nimport {connect}  from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nconst Nav = (props) =>{\r\n    const {auth, usersId, init} = props\r\n    // let user;\r\n    // usersId && usersId.forEach(elem =>{\r\n    //     if(elem.id == auth.uid){\r\n    //         user = elem.initials\r\n    //     }\r\n    // })\r\n    const links = auth.uid ? <SignedInBar initials={auth.isLoaded &&  init.initials }/> : <SignedOutBar />\r\n    return(\r\n        <ul className=\"nav sticky-top container-fluid bg-dark shadow-sm nav-pills nav-fill\">\r\n            <li className='nav-link'>\r\n                <ul className='nav'>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink exact className=\"nav-link \" to=\"/\"> \r\n                            <h5 className=' text-light'>Plan Maker</h5>\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n\r\n            <li className='nav-link text-light'>\r\n                {auth.isLoaded && links}\r\n            </li>\r\n                     \r\n        </ul> \r\n  \r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        usersId: state.firestore.ordered.users,\r\n        init: state.firebase.profile      \r\n    }\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(() => ['users']),\r\n    connect(mapStateToProps)\r\n)(Nav)\r\n\r\n","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props)=>{\r\n    const { notifications } = props \r\n\r\n    return (\r\n        <div className=' card shadow'>\r\n            <div className=\"card-header bg-info text-light\">\r\n                <h5>\r\n                    Notifications\r\n                </h5>\r\n            </div>\r\n            {\r\n                notifications ? notifications.map(notification=>{           \r\n            return  <div className=\"card-body border-bottom \" key={notification.id}>\r\n                <h6>\r\n                    <span className='text-danger'>{notification.user}  </span> \r\n                    <span className='text-info ml-3'>{notification.content}</span>\r\n                </h6>\r\n                        <p className='text-muted'>{moment(notification.time.toDate()).fromNow()}</p>\r\n                    </div>\r\n                }) : (\r\n                    <div className=\"card-body border-bottom \">\r\n                        <h3 className='text-center text-info'>Loading...</h3>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst PLanSummary = ({ plans, profile}) => {\r\n        return (\r\n        <div key={plans.id}>          \r\n            <div className='card mb-2 shadow'>\r\n                <div className=\"card-header\">\r\n                    <h6 className=''>{plans.title}</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <Link to={`/plan/${plans.id}`} className=' nav-link text-dark'>\r\n                    \r\n                        <p>\r\n                                created by \r\n                                <span className='ml-1 text-info'>\r\n                                    {plans.authFirstName}\r\n                                    { plans.authLastName }\r\n                                </span>\r\n                                    \r\n                        </p>\r\n                        <p className='text-muted'>\r\n                                {moment(plans.createdAt.toDate()).calendar()}\r\n                        </p>\r\n                    \r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PLanSummary","import React from 'react';\r\nimport PLanSummary from './planSummary';\r\n\r\nconst PLanList = ({ plans, profile}) =>{\r\n    return(\r\n       <div>\r\n           \r\n            { \r\n\r\n                plans && plans.map(element => {\r\n                    return <PLanSummary plans={element} key={plans.id} profile={profile}/>\r\n\r\n                })\r\n\r\n            }\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default PLanList","import React, { Component } from 'react';\r\nimport Notifications from './notifications'\r\nimport PLanList from '../project/planList'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass DashBoard extends Component{\r\n    \r\n    render(){\r\n        const { plans, auth, profile, notifications } = this.props\r\n        if (!auth.uid) return <Redirect to='/login'/>\r\n        return(\r\n            <div className=\"container-fluid container-md\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 order-2 order-md-1 col-12 py-4 px-md-4\">\r\n                        <PLanList plans={plans} profile={profile}/>\r\n                    </div>\r\n                    <div className=\"col-md-5 order-1 order-md-2 col-12 py-4 px-md-4\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        ) \r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        plans: state.firestore.ordered.plans,\r\n        auth: state.firebase.auth, \r\n        profile: state.firebase.profile, \r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    // firestoreConnect(() => ['plans']),\r\n    firestoreConnect([\r\n        { collection: 'notifications', limit:3, orderBy:['time', 'desc']},\r\n        { collection: 'plans', orderBy: ['createdAt', 'desc']},\r\n    ]),\r\n    connect(mapStateToProps)\r\n)(DashBoard)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { planDeleter } from '../../actions/planActions'\r\n\r\nfunction PlanDetail(props) {\r\n    const handleDelete = e => {\r\n        props.planDeleteFunc(id)\r\n        props.history.push('/')\r\n    }\r\n    const {plan, auth, id} = props\r\n    if (!auth.uid) return <Redirect to='/login' />\r\n    const btn = auth.uid == plan.authId ? \r\n        (<button className=' btn btn-danger' onClick={handleDelete}>Delete plan</button>) : null\r\n\r\n    if (plan){\r\n        return (\r\n            <div className='container m-5 mx-auto'>\r\n                <div className=\"card text-left p-4 shadow\">\r\n                    <div className=\"card-header\">\r\n                        <h4>\r\n                            {plan.title}\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">\r\n                        {\r\n                            plan.content\r\n                        }\r\n                    </p>\r\n                    </div>\r\n                    <div className=\"card-body border-top\">\r\n                        <p className='text-muted'>Posted by  <span className='text-info'> {plan.authFirstName} {plan.authLastName}</span></p>\r\n                        <p className='text-muted'>{moment(plan.createdAt.toDate()).calendar()}\r\n                        </p>\r\n                        {\r\n                            btn\r\n                        }\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        ) \r\n\r\n    }else{\r\n        return (\r\n            <div className='container m-5 mx-auto'>\r\n                <div className=\"card text-left p-4 \">\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">\r\n                        Loading....\r\n                    </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    const id = ownProps.match.params.id\r\n    const plans = state.firestore.data.plans\r\n    const plan = plans ? plans[id] : null\r\n    return {\r\n        plan,\r\n        auth: state.firebase.auth, \r\n        profile: state.firebase.profile, \r\n        id,\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        planDeleteFunc: id => dispatch(planDeleter(id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(() => ['plans']),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n\r\n)(PlanDetail)\r\n","export const planCreater = (plan)=>{\r\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\r\n        // ajax here from firebase\r\n        const firestore = getFirestore()\r\n        const profile = getState().firebase.profile\r\n        const authId = getState().firebase.auth.uid\r\n        firestore.collection('plans').add({\r\n            ...plan,\r\n            authFirstName: profile.firstname,\r\n            authLastName: profile.lastname,\r\n            authId,\r\n            createdAt: new Date() \r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PLAN', plan})\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PLAN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const planDeleter = id =>{\r\n\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        const firestore = getFirestore()\r\n        firestore.collection('plans').doc(id).delete()\r\n        .then(()=>{\r\n            dispatch({type: 'PLAN_DELETED'})\r\n        }).catch(err =>{\r\n            dispatch({type: 'PLAN_DELETE_ERROR', err})\r\n        })\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport {planCreater} from '../../actions/planActions'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nexport class CreatePlan extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        e.target.reset()\r\n        this.props.createPlan(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props\r\n        if (!auth.uid) return <Redirect to='/login'/>\r\n        return (\r\n            <div className='container-fluid container-md mt-5'>\r\n                <h3 className='text-center border-bottom mb-5'>Add Your Plan</h3>\r\n                <div className=\"row\">\r\n                    <div className=\"col-11 col-md-8 mx-auto bg-light p-3  rounded shadow\">\r\n                        <form className='p-4' onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\">title</label>\r\n                                <input onChange={this.handleChange} type=\"text\" className=\"form-control\" id='title' required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"content\">content</label>\r\n                                <textarea onChange={this.handleChange} type=\"text\" className=\"form-control\" id='content' required/>\r\n                            </div>\r\n                            <button className='btn btn-outline-dark'>Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        createPlan: (plan) => dispatch(planCreater(plan)),\r\n            \r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePlan) \r\n","import React, { Component } from 'react'\r\nimport { signInAction } from '../../actions/authAction'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nexport class SignIn extends Component {\r\n\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        this.props.signInFunc(this.state)\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { err, auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            auth.isLoaded &&  (<div className='container mt-5'>\r\n                <h3 className='text-center border-bottom mb-5'>Sign In</h3>\r\n                <div className=\"row\">\r\n                    <div className=\"col-11 col-md-8 mx-auto bg-light p-3  rounded shadow\">\r\n                        {\r\n                            err ? (\r\n                                <div className=\"alert alert-danger\">\r\n                                    <p className='text-center'>\r\n                                        {err}\r\n                                    </p>\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                        <form className='p-4' onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">email</label>\r\n                                <input onChange={this.handleChange} type=\"email\" className=\"form-control\" id='email' required/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">password</label>\r\n                                <input onChange={this.handleChange}type=\"password\" className=\"form-control\" id='password' required/>\r\n                            </div>\r\n                            <button className='btn btn-outline-dark'>Submit</button>\r\n                        </form> \r\n                    </div>\r\n                </div>            \r\n            </div>)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        err: state.auth.authErr,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        signInFunc: email_pass => dispatch(signInAction(email_pass))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {signUpAction} from '../../actions/authAction'\r\n\r\n\r\nexport class SignUp extends Component {\r\n\r\n    state = {\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        password: '',\r\n        confirm: '',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { password, confirm } = this.state\r\n        if(password === confirm){\r\n            this.props.signUpFunc(this.state)\r\n        }else{\r\n            alert('passwords are not matching')\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { auth, authLite } = this.props\r\n\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            auth.isLoaded  &&\r\n                (<div className='container mt-4'>\r\n                    <h3 className='text-center border-bottom text-dark mb-4 p-2'>Sign Up</h3>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-11 col-md-8 mx-auto bg-light p-3  rounded shadow\">\r\n                            <form className='p-4' onSubmit={this.handleSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstname\">First\r\n                                    Name</label>\r\n                                    <input onChange={this.handleChange} type=\"text\" className=\"form-control\" id='firstname' required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"lastname\">Last Name</label>\r\n                                    <input onChange={this.handleChange} type=\"text\" className=\"form-control\" id='lastname' required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">email</label>\r\n                                    <input onChange={this.handleChange} type=\"email\" className=\"form-control\" id='email' required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input onChange={this.handleChange} type=\"password\" className=\"form-control\" id='password' required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"confirm\">Confirm Password</label>\r\n                                    <input onChange={this.handleChange} type=\"password\" className=\"form-control\" id='confirm' required />\r\n                                </div>\r\n                                {authLite ? (\r\n                                    <div className=\"alert alert-danger\">\r\n                                        <p className=\"text-center\">\r\n                                            {authLite}\r\n                                        </p>\r\n                                    </div>\r\n                                ) : null}\r\n                                <button className='btn btn-outline-dark'>Submit</button>\r\n                            </form>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authLite: state.auth.authErr\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUpFunc: (cred) => dispatch(signUpAction(cred))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\nimport Nav from './components/layout/navbar'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Dashboard from './components/dashboard/dashboard'\nimport PlanDetail from './components/project/planDetails'\nimport CreatePlan from './components/project/createPlan'\nimport SignIn from './components/auth/signin'\nimport SignUp from './components/auth/signup'\n\n\nclass App extends Component{\n\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Nav />\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/plan/:id' component={PlanDetail}/>\n            <Route path='/login' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/createPlan' component={CreatePlan}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Redirect } from \"react-router-dom\"\r\n\r\nconst initState = {\r\n    authErr: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'LOGIN_FAILED':\r\n            return {\r\n                ...state,\r\n                authErr: action.err.message\r\n            }\r\n        case 'LOGIN_SUCCESSFUL':\r\n            return {\r\n                ...state,\r\n                authErr: null\r\n            }\r\n        case 'LOGED_OUT_USER':\r\n            console.log(action.type) \r\n        case 'SIGNED_UP_USER':\r\n            console.log(action.type) \r\n            return {\r\n                ...state,\r\n                authErr: null\r\n            }\r\n        case 'SIGNED_UP_USER_FAIL':\r\n            return {\r\n                ...state,\r\n                authErr: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    plans: [\r\n       \r\n    ]\r\n}\r\n\r\n\r\nconst planReducer = (state=initState, action) =>{\r\n    switch(action.type){\r\n        case 'CREATE_PLAN':\r\n            return state\r\n        case 'CREATE_PLAN_ERROR':\r\n            console.log(action.type, action.err)\r\n        case 'PLAN_DELETE_ERROR':\r\n            console.log(action.type, action.err)\r\n        case 'PLAN_DELETED':\r\n            console.log(action.type)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default planReducer","import authReducer from './authReducer'\r\nimport planReducer from './planReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer, firebaseConnect } from 'react-redux-firebase'\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    plan: planReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n})          \r\n\r\nexport default rootReducer","import firebase, { firestore } from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nexport var firebaseConfig = {\r\n    apiKey: \"AIzaSyDmDJKhkYAtCNnr8GQ5myRAC4GDBo7HluM\",\r\n    authDomain: \"ad-planner-45436.firebaseapp.com\",\r\n    databaseURL: \"https://ad-planner-45436.firebaseio.com\",\r\n    projectId: \"ad-planner-45436\",\r\n    storageBucket: \"ad-planner-45436.appspot.com\",\r\n    messagingSenderId: \"741250255755\",\r\n    appId: \"1:741250255755:web:83450f36f4c0f74d3dfd8e\",\r\n    measurementId: \"G-GWEZ73BWXD\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './reducer/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { getFirestore, reduxFirestore, createFirestoreInstance} from 'redux-firestore'\nimport { getFirebase, ReactReduxFirebaseProvider, reactReduxFirebase} from 'react-redux-firebase'\nimport firebaseConfig from './config/fbconfig'\nimport firebase from './config/fbconfig'\n\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n  reduxFirestore(firebaseConfig),\n))\n\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}